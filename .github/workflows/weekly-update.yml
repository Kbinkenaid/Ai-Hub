name: Weekly AI Tools Update

on:
  schedule:
    # Run every Monday at 9:00 AM UTC (adjust for your timezone)
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering for testing

jobs:
  update-ai-tools:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install axios cheerio nodemailer
        # Install only the required packages for the scraper

    - name: Run AI Tools Scraper
      id: scraper
      run: |
        cd scripts
        node scraper.js
        echo "scraper_completed=true" >> $GITHUB_OUTPUT
      env:
        NODE_ENV: production

    - name: Check for changes
      id: check_changes
      run: |
        if git diff --quiet data/tools.json; then
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "No new tools found"
        else
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "New tools detected"
        fi

    - name: Get stats for email
      id: get_stats
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        # Count new tools added
        NEW_TOOLS=$(git diff --numstat data/tools.json | awk '{print $1}' | head -1)
        TOTAL_TOOLS=$(node -e "const data = require('./data/tools.json'); console.log(data.totalTools);")
        
        echo "new_tools_count=$NEW_TOOLS" >> $GITHUB_OUTPUT
        echo "total_tools=$TOTAL_TOOLS" >> $GITHUB_OUTPUT

    - name: Commit and push changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/tools.json
        git commit -m "ðŸ¤– Weekly AI tools update - $(date '+%Y-%m-%d')

        - Added new AI tools from automated discovery
        - Updated tools database with latest findings
        - Automated categorization and deduplication applied
        
        Auto-generated by GitHub Actions"
        git push

    - name: Get commit URL
      id: commit_url
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        COMMIT_SHA=$(git rev-parse HEAD)
        REPO_URL="https://github.com/${{ github.repository }}"
        COMMIT_URL="${REPO_URL}/commit/${COMMIT_SHA}"
        echo "commit_url=$COMMIT_URL" >> $GITHUB_OUTPUT

    - name: Send success notification
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        node -e "
        const EmailNotifier = require('./scripts/email-notifier.js');
        const notifier = new EmailNotifier();
        
        const results = {
          newToolsCount: ${{ steps.get_stats.outputs.new_tools_count || 0 }},
          totalTools: ${{ steps.get_stats.outputs.total_tools || 0 }},
          categories: {},
          commitUrl: '${{ steps.commit_url.outputs.commit_url }}',
          siteUrl: 'https://${{ github.event.repository.name }}.vercel.app'
        };
        
        notifier.sendSuccessNotification(results)
          .then(() => console.log('Success notification sent'))
          .catch(error => console.error('Notification failed:', error));
        "
      env:
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}

    - name: Send no-changes notification
      if: steps.check_changes.outputs.changes_detected == 'false'
      run: |
        node -e "
        const EmailNotifier = require('./scripts/email-notifier.js');
        const notifier = new EmailNotifier();
        
        const results = {
          newToolsCount: 0,
          totalTools: 0,
          categories: {},
          commitUrl: null,
          siteUrl: 'https://${{ github.event.repository.name }}.vercel.app'
        };
        
        notifier.sendSuccessNotification(results)
          .then(() => console.log('No-changes notification sent'))
          .catch(error => console.error('Notification failed:', error));
        "
      env:
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}

    - name: Send failure notification
      if: failure()
      run: |
        node -e "
        const EmailNotifier = require('./scripts/email-notifier.js');
        const notifier = new EmailNotifier();
        
        const error = new Error('GitHub Actions workflow failed. Check the logs for details.');
        
        notifier.sendFailureNotification(error)
          .then(() => console.log('Failure notification sent'))
          .catch(error => console.error('Failure notification failed:', error));
        "
      env:
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}